# Why does dev and prod copy the whole auth path, while tests has a selection
# Why does Test have multiple extra installs and does a pip install, but the others don't?
# Pip install references the requirements.txt as well as requirements_development.txt (????)
#   Probably for Linters etc.
# Why is dev so slim
# Why is build node version different from the actual prod version??


ARG CONTEXT=dev
ARG NODE_IMAGE_VERSION=22.11

FROM node:${NODE_IMAGE_VERSION}-alpine AS base

ARG NODE_IMAGE_VERSION
ARG CONTEXT

WORKDIR /app

## Context-based setup
ENV NODE_VERSION=${NODE_IMAGE_VERSION}.0

## File copies
# Application lays in /app/src
COPY ./auth ./

## NPM
RUN npm ci

## TODO Subimage??
# FROM node:23.0-alpine

LABEL org.opencontainers.image.title="OpenSlides Authentication Service"
LABEL org.opencontainers.image.description="Service for OpenSlides which handles the authentication of users."
LABEL org.opencontainers.image.licenses="MIT"
LABEL org.opencontainers.image.source="https://github.com/OpenSlides/openslides-auth-service"

## TODO These should exist, since we skip the subimage step
#COPY --from=build /app/build .
#COPY --from=build /app/entrypoint.sh .
#COPY --from=build /app/wait-for.sh .
#COPY --from=build /app/node_modules ./node_modules

## Function
EXPOSE 9004
ENTRYPOINT ["./entrypoint.sh"]




# Production Image
FROM base as prod

# Now the source-files can be transpiled
RUN npm run build

RUN npm prune --production

## File Copies
CMD ["node", "index.js"]




# Development Image
FROM base as dev

ENV OPENSLIDES_DEVELOPMENT 1

CMD ["node", "node_modules/.bin/nodemon", "src/index.ts"]



# Test Image
FROM base as tests

## Install Pip & dependencies
RUN (apk update && \
    apk add --no-cache \
    python3 python3-dev py3-pip gcc libc-dev)
RUN pip install --no-cache-dir --break-system-packages -r ./libraries/pip-auth/requirements.txt -r ./libraries/pip-auth/requirements_development.txt


RUN chmod -R 777 .

ENV OPENSLIDES_DEVELOPMENT 1

CMD ["node", "node_modules/.bin/nodemon", "src/index.ts"]
